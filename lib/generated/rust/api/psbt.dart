// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.3.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'structs.dart';

(String, BigInt?) createNewPsbt(
        {required String encodedWallet,
        required Map<String, ApiOwnedOutput> inputs,
        required List<ApiRecipient> recipients}) =>
    RustLib.instance.api.crateApiPsbtCreateNewPsbt(
        encodedWallet: encodedWallet, inputs: inputs, recipients: recipients);

String addFeeForFeeRate(
        {required String psbt, required int feeRate, required String payer}) =>
    RustLib.instance.api.crateApiPsbtAddFeeForFeeRate(
        psbt: psbt, feeRate: feeRate, payer: payer);

String fillSpOutputs({required String encodedWallet, required String psbt}) =>
    RustLib.instance.api
        .crateApiPsbtFillSpOutputs(encodedWallet: encodedWallet, psbt: psbt);

String signPsbt(
        {required String encodedWallet,
        required String psbt,
        required bool finalize}) =>
    RustLib.instance.api.crateApiPsbtSignPsbt(
        encodedWallet: encodedWallet, psbt: psbt, finalize: finalize);

String extractTxFromPsbt({required String psbt}) =>
    RustLib.instance.api.crateApiPsbtExtractTxFromPsbt(psbt: psbt);

Future<String> broadcastTx({required String tx, required String network}) =>
    RustLib.instance.api.crateApiPsbtBroadcastTx(tx: tx, network: network);

BigInt readAmtFromPsbtOutput({required String psbt, required BigInt idx}) =>
    RustLib.instance.api
        .crateApiPsbtReadAmtFromPsbtOutput(psbt: psbt, idx: idx);
